
1. virtual environment kurulumu:
pip install virtualenv
pip install virtualenvwrapper-win

2. kontrol
virtualenv --version

3. virtualenv için bir dizin oluþtur ve içine gir.
mkdir erkan_virtualenv
cd erkan_virtualenv

4. proje oluþtur 
mkvirtualenv myenv


5. Artýk virtualenv oluþtu örnek komutlar:
(myenv) C:\Users\user\erkan_virtualenv>python -V
Python 3.6.5

(myenv) C:\Users\user\erkan_virtualenv>pip -V
pip 19.1.1 from c:\users\user\envs\myenv\lib\site-packages\pip (python 3.6)


6. proje dizini oluþturmak

mkdir dev

cd dev

setprojectdir .

    "C:\Users\user\erkan_virtualenv\dev" is now the project directory for
    virtualenv "C:\Users\user\Envs\myenv"

    "C:\Users\user\erkan_virtualenv\dev" added to
    C:\Users\user\Envs\myenv\Lib\site-packages\virtualenv_path_extensions.pth

(myenv) C:\Users\user\erkan_virtualenv\dev>



7. virtualenv'dan çýkmak 
deactivate


8. Tekrar projeye devam etmek
workon myenv


9. tensorflow 2.0 yüklemek


10. virtualenv'dan jupyter kullanmak için 
(myenv) C:\Users\user\erkan_virtualenv\dev>ipython kernel install --user --name=myenv
	Installed kernelspec myenv in C:\Users\user\AppData\Roaming\jupyter\kernels\myenv


11. jupyter notebook çalýþtýrdýðýmýzda 
new butonuna týkladýðýmýzda artýk Pyton 3 ile birlikte myenv'i de görüyor olacaðýz.